# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
# Also run all tests, and check they pass before uploading

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  pytest:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        python-version: [3.6, 3.7, '3.x']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest dill
    - name: Test with pytest
      run: |
        pytest


  flake8:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        python-version: [3.6, 3.7, '3.x']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    - name: Lint with flake8
      run: |
        flake8


  black:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        python-version: [3.6, 3.7, '3.x']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black
    - name: Check formatting with black
      run: |
        black --check .


  deploy:

    runs-on: ubuntu-latest
    needs: [pytest, flake8, black]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        git fetch --tags --unshallow
        python setup.py sdist bdist_wheel
        twine upload dist/*
